import{ab as t,H as i,I as o,F as a,V as n,O as l,ad as s,Y as c}from"./framework-6d9bedb0.js";const p={},d=s('<h2 id="区块链基础" tabindex="-1"><a class="header-anchor" href="#区块链基础" aria-hidden="true">#</a> 区块链基础</h2><h3 id="交易-transactions" tabindex="-1"><a class="header-anchor" href="#交易-transactions" aria-hidden="true">#</a> 交易（Transactions）</h3><ul><li>区块链是一个全球共享交易数据库</li><li>创建交易，意味着改变，改变必须保证ACID的。</li><li>交易由源的一方加密签名</li></ul><h3 id="块-blocks" tabindex="-1"><a class="header-anchor" href="#块-blocks" aria-hidden="true">#</a> 块（Blocks）</h3><ul><li>要克服<code>double-spend attack</code>，指二次交易的问题，解决的办法是需要标记第一次交易，后面的将会拒绝。</li><li>在事件上形成线性序列的交易，一个一个的交易块形成了区块链。</li><li>块可能被还原（这里不是很理解，后面再回来看）</li></ul><h2 id="以太坊虚拟机" tabindex="-1"><a class="header-anchor" href="#以太坊虚拟机" aria-hidden="true">#</a> 以太坊虚拟机</h2><h3 id="账户-accounts" tabindex="-1"><a class="header-anchor" href="#账户-accounts" aria-hidden="true">#</a> 账户（Accounts）</h3><ul><li>账户类型：公私钥对控制的<strong>外部账户</strong>，代码控制的<strong>合约账户</strong></li><li>每个账户有一个持有化的键值储存，<code>256-bit=&gt;256-bit</code>mapping的<strong>storage</strong></li><li>每个账户在以太坊里都有<strong>balance</strong>(准确说是Wei,<code>1 ether = 10^18 wei</code>)，可以通过交易修改。</li></ul><h3 id="交易-transactions-未完成" tabindex="-1"><a class="header-anchor" href="#交易-transactions-未完成" aria-hidden="true">#</a> 交易（Transactions）未完成</h3><p>交易是一个账户到另一个账户的消息，可以是二进制数据（有效荷载）和以太币。</p><h3 id="气体-gas-未完成" tabindex="-1"><a class="header-anchor" href="#气体-gas-未完成" aria-hidden="true">#</a> 气体（Gas）未完成</h3><p>每一笔交易都会收取一定量的Gas，由交易发起人支付<code>tx.origin</code>(像是交税？)</p><h3 id="储存、内存和堆栈-storage-memory-and-the-stack" tabindex="-1"><a class="header-anchor" href="#储存、内存和堆栈-storage-memory-and-the-stack" aria-hidden="true">#</a> 储存、内存和堆栈（Storage, Memory and the Stack）</h3><p>以太坊虚拟机有三个地方可以储存数据：储存、内存和堆栈</p><ul><li><strong>储存</strong>就是之前说的<code>256-bit=&gt;256-bit</code>，读取成本较高，初始化和修改成本更高。合约不能读取和写入自己之外的Storage。</li><li><strong>内存</strong>是线性的，读取限制为256bit，写入是8bit或者256bit。内存的扩建需要支付gas。</li><li><strong>堆栈</strong>EVM不是寄存器机而是堆栈机（这里可以了解下这两种工作方式的区别），最大大小1024个元素，每个元素256bit。</li></ul><h3 id="指令系统" tabindex="-1"><a class="header-anchor" href="#指令系统" aria-hidden="true">#</a> 指令系统</h3>',16),r={href:"https://docs.soliditylang.org/en/latest/yul.html#opcodes",target:"_blank",rel:"noopener noreferrer"},u=s(`<h3 id="message-calls" tabindex="-1"><a class="header-anchor" href="#message-calls" aria-hidden="true">#</a> Message Calls</h3><h3 id="delegatecall-and-libraries" tabindex="-1"><a class="header-anchor" href="#delegatecall-and-libraries" aria-hidden="true">#</a> Delegatecall and Libraries</h3><h3 id="日志-logs" tabindex="-1"><a class="header-anchor" href="#日志-logs" aria-hidden="true">#</a> 日志（Logs）</h3><h3 id="创建-create" tabindex="-1"><a class="header-anchor" href="#创建-create" aria-hidden="true">#</a> 创建（Create）</h3><h3 id="停用或者销毁-deactivate-and-self-destruct" tabindex="-1"><a class="header-anchor" href="#停用或者销毁-deactivate-and-self-destruct" aria-hidden="true">#</a> 停用或者销毁（Deactivate and Self-destruct）</h3><h3 id="预编译合约-precompiled-contracts" tabindex="-1"><a class="header-anchor" href="#预编译合约-precompiled-contracts" aria-hidden="true">#</a> 预编译合约（Precompiled Contracts）</h3><h2 id="语言说明" tabindex="-1"><a class="header-anchor" href="#语言说明" aria-hidden="true">#</a> 语言说明</h2><h3 id="solidity源文件布局-联想" tabindex="-1"><a class="header-anchor" href="#solidity源文件布局-联想" aria-hidden="true">#</a> Solidity源文件布局 （联想）</h3><ul><li>SPDX许可证 <code>// SPDX-License-Identifier: MIT</code></li><li>编译指示 <ul><li>版本编译指示<code>pragma solidity ^0.5.2;</code></li><li>ABI编码器编译指示 <code>pragma abicoder v1</code>,<code>pragma abicoder v2</code></li><li>SMT检查器 <code>pragma experimental SMTChecker;</code></li></ul></li><li>导入入其他源文件 <ul><li><code>import &quot;filename&quot;;</code></li><li><code>import * as symbolName from &quot;filename&quot;;</code>, <code>import &quot;filename&quot; as symbolName;</code></li><li><code>import {symbol1 as alias, symbol2} from &quot;filename&quot;;</code></li></ul></li><li>注释</li></ul><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// This is a single-line comment.</span>

<span class="token comment">/*
This is a
multi-line comment.
*/</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="合约结构" tabindex="-1"><a class="header-anchor" href="#合约结构" aria-hidden="true">#</a> 合约结构</h3><h4 id="状态变量" tabindex="-1"><a class="header-anchor" href="#状态变量" aria-hidden="true">#</a> 状态变量</h4><p>状态变量是其值永久存储在合约存储中的变量。</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">SimpleStorage</span> <span class="token punctuation">{</span>
    <span class="token builtin">uint</span> storedData<span class="token punctuation">;</span> <span class="token comment">// State variable</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如其中storedData就是状态变量，有点类似于java的class中的成员变量。</p><h4 id="函数" tabindex="-1"><a class="header-anchor" href="#函数" aria-hidden="true">#</a> 函数</h4><p>函数调用可以在内部或外部发生，并且 对其他合约具有不同级别的可见性。函数接受参数并返回变量以在它们之间传递参数和值</p><h4 id="函数修饰符" tabindex="-1"><a class="header-anchor" href="#函数修饰符" aria-hidden="true">#</a> 函数修饰符</h4><h4 id="事件" tabindex="-1"><a class="header-anchor" href="#事件" aria-hidden="true">#</a> 事件</h4><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.21</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">SimpleAuction</span> <span class="token punctuation">{</span>
    <span class="token keyword">event</span> <span class="token function">HighestBidIncreased</span><span class="token punctuation">(</span><span class="token builtin">address</span> bidder<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Event</span>

    <span class="token keyword">function</span> <span class="token function">bid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token keyword">payable</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
        <span class="token keyword">emit</span> <span class="token function">HighestBidIncreased</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">,</span> msg<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Triggering event</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="错误" tabindex="-1"><a class="header-anchor" href="#错误" aria-hidden="true">#</a> 错误</h4><p>错误允许您为故障情况定义描述性名称和数据。错误可以用在revert 语句中。与字符串描述相比，错误的成本要低得多，并且允许您对额外数据进行编码。</p><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">^</span><span class="token version number">0.8.4</span><span class="token punctuation">;</span>

<span class="token comment">/// Not enough funds for transfer. Requested \`requested\`,</span>
<span class="token comment">/// but only \`available\` available.</span>
error <span class="token function">NotEnoughFunds</span><span class="token punctuation">(</span><span class="token builtin">uint</span> requested<span class="token punctuation">,</span> <span class="token builtin">uint</span> available<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Token</span> <span class="token punctuation">{</span>
    <span class="token keyword">mapping</span><span class="token punctuation">(</span><span class="token builtin">address</span> <span class="token operator">=&gt;</span> <span class="token builtin">uint</span><span class="token punctuation">)</span> balances<span class="token punctuation">;</span>
    <span class="token keyword">function</span> <span class="token function">transfer</span><span class="token punctuation">(</span><span class="token builtin">address</span> to<span class="token punctuation">,</span> <span class="token builtin">uint</span> amount<span class="token punctuation">)</span> <span class="token keyword">public</span> <span class="token punctuation">{</span>
        <span class="token builtin">uint</span> balance <span class="token operator">=</span> balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>balance <span class="token operator">&lt;</span> amount<span class="token punctuation">)</span>
            <span class="token keyword">revert</span> <span class="token function">NotEnoughFunds</span><span class="token punctuation">(</span>amount<span class="token punctuation">,</span> balance<span class="token punctuation">)</span><span class="token punctuation">;</span>
        balances<span class="token punctuation">[</span>msg<span class="token punctuation">.</span>sender<span class="token punctuation">]</span> <span class="token operator">-=</span> amount<span class="token punctuation">;</span>
        balances<span class="token punctuation">[</span>to<span class="token punctuation">]</span> <span class="token operator">+=</span> amount<span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="结构类型" tabindex="-1"><a class="header-anchor" href="#结构类型" aria-hidden="true">#</a> 结构类型</h4><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Ballot</span> <span class="token punctuation">{</span>
    <span class="token keyword">struct</span> <span class="token class-name">Voter</span> <span class="token punctuation">{</span> <span class="token comment">// Struct</span>
        <span class="token builtin">uint</span> weight<span class="token punctuation">;</span>
        <span class="token builtin">bool</span> voted<span class="token punctuation">;</span>
        <span class="token builtin">address</span> delegate<span class="token punctuation">;</span>
        <span class="token builtin">uint</span> vote<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="枚举" tabindex="-1"><a class="header-anchor" href="#枚举" aria-hidden="true">#</a> 枚举</h4><div class="language-solidity line-numbers-mode" data-ext="solidity"><pre class="language-solidity"><code><span class="token comment">// SPDX-License-Identifier: GPL-3.0</span>
<span class="token keyword">pragma</span> <span class="token keyword">solidity</span> <span class="token operator">&gt;=</span><span class="token version number">0.4.0</span> <span class="token operator">&lt;</span><span class="token version number">0.9.0</span><span class="token punctuation">;</span>

<span class="token keyword">contract</span> <span class="token class-name">Purchase</span> <span class="token punctuation">{</span>
    <span class="token keyword">enum</span> <span class="token class-name">State</span> <span class="token punctuation">{</span> Created<span class="token punctuation">,</span> Locked<span class="token punctuation">,</span> Inactive <span class="token punctuation">}</span> <span class="token comment">// Enum</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27);function k(m,h){const e=c("ExternalLinkIcon");return i(),o("div",null,[d,a("p",null,[n("EVM所有指令都是对基本数据类型，256bit或内存片操作。完整的列表可以参见"),a("a",r,[n("操作码列表"),l(e)]),n("。")]),u])}const b=t(p,[["render",k],["__file","day2.html.vue"]]);export{b as default};
